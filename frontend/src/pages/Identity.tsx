import { useState, useEffect } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { useToast } from "@/hooks/use-toast";
import { useWeb3 } from "@/contexts/Web3Context";
import { Shield, Wallet, CheckCircle, User, Globe, Key } from "lucide-react";

const Identity = () => {
  const [ensName, setEnsName] = useState("");
  const [didIdentity, setDidIdentity] = useState("");
  const { toast } = useToast();
  const { 
    isConnected, 
    account, 
    identity, 
    connectWallet,
    createIdentity, 
    isLoading, 
    isCreatingIdentity 
  } = useWeb3();

  // Auto-generate DID when wallet connects
  useEffect(() => {
    if (isConnected && account && !didIdentity) {
      const autoGeneratedDID = `did:ethr:${account}`;
      setDidIdentity(autoGeneratedDID);
    }
  }, [isConnected, account, didIdentity]);

  const handleConnectWallet = async () => {
    // This function is now a no-op as connection is handled by RainbowKit's ConnectButton in Navbar
    console.log("Identity page connect wallet called, but handled by Navbar's ConnectButton.");
  };

  const handleCreateIdentity = async () => {
    const finalEnsName = ensName || "demo.eth";
    const finalDID = didIdentity || `did:ethr:${account}`;

    if (!isConnected) {
      toast({
        title: "Wallet Not Connected",
        description: "Please connect your wallet first",
        variant: "destructive",
      });
      return;
    }

    if (!finalEnsName || !finalDID) {
      toast({
        title: "Missing Information",
        description: "Please fill in both ENS name and DID identity",
        variant: "destructive",
      });
      return;
    }

    try {
      await createIdentity(finalEnsName, finalDID);
      toast({
        title: "Identity Created Successfully!",
        description: "Your Web3 identity has been registered on the blockchain",
      });
    } catch (error) {
      console.error("Failed to create identity:", error);
      toast({
        title: "Failed to Create Identity",
        description: "Please try again or check your wallet connection",
        variant: "destructive",
      });
    }
  };

  const fillDemoValues = () => {
    setEnsName("demo.eth");
    setDidIdentity(`did:ethr:${account || "0x..."}`);
  };

  return (
    <div className="min-h-screen bg-black text-white grid-bg">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12 animate-fade-in">
          <div className="flex items-center justify-center mb-6">
            <Shield className="w-12 h-12 text-cyan-400 animate-float" />
          </div>
          <h1 className="text-4xl font-bold mb-4 font-futuristic text-white-glow">
            Create Your Web3 Identity
          </h1>
          <p className="text-xl text-white/70 font-mono-space max-w-2xl mx-auto">
            Test the identity system for free! No real ENS registration required - just use demo values.
          </p>
          <div className="mt-4 p-4 bg-black/30 border border-white/20 rounded-lg max-w-2xl mx-auto">
            <div className="flex items-start gap-3">
              <div className="w-6 h-6 bg-cyan-400 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                <span className="text-black text-xs font-bold">i</span>
              </div>
              <div>
                <p className="text-sm font-medium text-white mb-2 font-code">ðŸ†“ <strong>Free Testing on Hedera Testnet!</strong></p>
                <p className="text-sm text-white/80 mb-2 font-code">
                  This identity creation is completely free! We're using Hedera Testnet with test HBAR tokens - no real money required.
                </p>
                <p className="text-xs text-white/70 font-code">
                  ðŸ’¡ <strong>How it works:</strong> Your wallet will automatically switch to Hedera Testnet and use test HBAR for gas fees. Perfect for development and testing!
                </p>
              </div>
            </div>
          </div>
        </div>

        <div className="grid lg:grid-cols-2 gap-8">
          {/* Identity Creation Form */}
          <Card className="glass-card terminal-border hover-lift animate-slide-up">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <User className="w-5 h-5 text-cyan-400" />
                <span className="font-futuristic text-white">Identity Registration</span>
              </CardTitle>
              <CardDescription className="text-white/70 font-code">
                Enter your ENS name and decentralized identifier
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="space-y-2">
                <label className="text-sm font-medium flex items-center gap-2 text-white font-code">
                  <Globe className="w-4 h-4 text-cyan-400" />
                  ENS Name (Demo)
                </label>
                <Input
                  placeholder="testuser.eth (demo only)"
                  value={ensName}
                  onChange={(e) => setEnsName(e.target.value)}
                  className="input-glass font-code"
                />
                <p className="text-xs text-white/70 font-code">
                  ðŸ’¡ For demo purposes, any name ending with .eth will work. No real ENS registration required!
                </p>
              </div>

              <div className="space-y-2">
                <label className="text-sm font-medium flex items-center gap-2 text-white font-code">
                  <Key className="w-4 h-4 text-cyan-400" />
                  DID Identity (Auto-generated)
                </label>
                <Input
                  placeholder="did:ethr:0x... (will auto-fill with your wallet address)"
                  value={didIdentity}
                  onChange={(e) => setDidIdentity(e.target.value)}
                  className="input-glass font-code"
                />
                <p className="text-xs text-white/70 font-code">
                  ðŸ”§ We'll auto-generate this from your wallet address when connected
                </p>
              </div>

              {/* Demo Helper */}
              {isConnected && (!ensName || !didIdentity) && (
                <div className="p-3 bg-black/30 border border-white/20 rounded-lg">
                  <p className="text-sm text-white mb-2 font-code">
                    ðŸš€ <strong>Quick Start:</strong> Fill demo values to test the identity system for free!
                  </p>
                  <Button 
                    variant="outline" 
                    size="sm" 
                    onClick={fillDemoValues}
                    className="btn-secondary font-futuristic"
                  >
                    Fill Demo Values
                  </Button>
                </div>
              )}

              {!isConnected ? (
                <div className="space-y-4">
                  <div className="p-4 bg-black/30 border border-white/20 rounded-lg">
                    <div className="flex items-center gap-2 mb-2">
                      <Wallet className="w-5 h-5 text-yellow-400" />
                      <span className="font-medium text-yellow-400 font-code">Wallet Not Connected</span>
                    </div>
                    <p className="text-sm text-white/70 font-code">
                      Please connect your wallet using the "Connect Wallet" button in the navigation bar above.
                    </p>
                  </div>
                </div>
              ) : identity ? (
                <div className="p-4 bg-black/30 border border-white/20 rounded-lg">
                  <div className="flex items-center gap-2 mb-2">
                    <CheckCircle className="w-5 h-5 text-green-400" />
                    <span className="font-medium text-green-400 font-code">Identity Already Created</span>
                  </div>
                  <p className="text-sm text-white/70 font-code">
                    You already have an identity registered: <strong>{identity.ensName}</strong>
                  </p>
                </div>
              ) : (
                <Button 
                  onClick={handleCreateIdentity}
                  disabled={isCreatingIdentity || isLoading}
                  className="w-full btn-primary"
                  size="lg"
                >
                  {isCreatingIdentity ? (
                    <>
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2" />
                      Creating Identity...
                    </>
                  ) : (
                    <>
                      <Shield className="w-4 h-4 mr-2" />
                      Create Identity
                    </>
                  )}
                </Button>
              )}
            </CardContent>
          </Card>

          {/* User Profile Display */}
          <Card className="glass-card terminal-border hover-lift animate-slide-up" style={{ animationDelay: '0.2s' }}>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <User className="w-5 h-5 text-cyan-400" />
                <span className="font-futuristic text-white">Identity Profile</span>
              </CardTitle>
              <CardDescription className="text-white/70 font-code">
                Your Web3 identity information
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              {identity ? (
                <>
                  <div className="space-y-4">
                    <div className="flex items-center justify-between p-3 bg-black/30 border border-white/20 rounded-lg">
                      <div className="flex items-center gap-2">
                        <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse" />
                        <span className="text-sm font-medium text-white font-code">Identity Active</span>
                      </div>
                      <Badge variant="secondary" className="bg-green-500/20 text-green-400">
                        Verified
                      </Badge>
                    </div>
                    
                    <div className="space-y-3">
                      <div>
                        <label className="text-sm font-medium text-white/70 font-code">ENS Name</label>
                        <div className="font-medium text-cyan-400 font-code">{identity.ensName}</div>
                      </div>
                      
                      <div>
                        <label className="text-sm font-medium text-white/70 font-code">DID Identity</label>
                        <div className="text-xs font-mono bg-black/30 border border-white/20 p-2 rounded break-all text-white/80">
                          {identity.did}
                        </div>
                      </div>
                      
                      <div>
                        <label className="text-sm font-medium text-white/70 font-code">Wallet Address</label>
                        <div className="text-xs font-mono bg-black/30 border border-white/20 p-2 rounded break-all text-white/80">
                          {identity.wallet}
                        </div>
                      </div>
                    </div>
                  </div>
                </>
              ) : (
                <div className="text-center py-8">
                  <User className="w-16 h-16 text-white/40 mx-auto mb-4 opacity-50" />
                  <p className="text-white/70 font-code">
                    Connect your wallet to view your identity profile.
                  </p>
                </div>
              )}
            </CardContent>
          </Card>
        </div>

        {/* How It Works Section */}
        <div className="mt-12 animate-fade-in" style={{ animationDelay: '0.4s' }}>
          <div className="text-center mb-8">
            <h3 className="text-2xl font-bold mb-2 bg-gradient-to-r from-slate-800 to-slate-600 bg-clip-text text-transparent">
              How Identity Creation Works
            </h3>
            <p className="text-white/70 font-code">Understanding the process step by step</p>
          </div>
          
          <div className="grid md:grid-cols-4 gap-6">
            <div className="bg-white/80 backdrop-blur-sm border border-white/30 shadow-xl p-6 rounded-xl text-center">
              <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-blue-600 font-bold text-lg">1</span>
              </div>
              <h3 className="font-semibold mb-2">Connect Wallet</h3>
              <p className="text-sm text-muted-foreground">Connect your MetaMask or other Web3 wallet</p>
            </div>
            
            <div className="bg-white/80 backdrop-blur-sm border border-white/30 shadow-xl p-6 rounded-xl text-center">
              <div className="w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-green-600 font-bold text-lg">2</span>
              </div>
              <h3 className="font-semibold mb-2">Switch Network</h3>
              <p className="text-sm text-muted-foreground">Automatically switch to Hedera Testnet (free HBAR)</p>
            </div>
            
            <div className="bg-white/80 backdrop-blur-sm border border-white/30 shadow-xl p-6 rounded-xl text-center">
              <div className="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-purple-600 font-bold text-lg">3</span>
              </div>
              <h3 className="font-semibold mb-2">Create Identity</h3>
              <p className="text-sm text-muted-foreground">Your ENS name and DID are stored on Hedera blockchain</p>
            </div>
            
            <div className="bg-white/80 backdrop-blur-sm border border-white/30 shadow-xl p-6 rounded-xl text-center">
              <div className="w-12 h-12 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-orange-600 font-bold text-lg">4</span>
              </div>
              <h3 className="font-semibold mb-2">Start Using</h3>
              <p className="text-sm text-muted-foreground">Use your identity for secure token swaps and transactions</p>
            </div>
          </div>
        </div>

        {/* Features Info */}
        <div className="mt-12 grid md:grid-cols-3 gap-6 animate-fade-in" style={{ animationDelay: '0.6s' }}>
          {[
            {
              icon: Shield,
              title: "Secure Verification",
              description: "Your identity is cryptographically secured on Hedera blockchain"
            },
            {
              icon: Globe,
              title: "Free Testing",
              description: "Uses Hedera Testnet with free HBAR - no real money required"
            },
            {
              icon: Key,
              title: "Self-Sovereign",
              description: "You own and control your identity data completely"
            }
          ].map((feature, index) => (
            <div key={feature.title} className="bg-white/80 backdrop-blur-sm border border-white/30 shadow-xl p-6 rounded-xl text-center">
              <feature.icon className="w-8 h-8 text-primary mx-auto mb-3" />
              <h3 className="font-semibold mb-2">{feature.title}</h3>
              <p className="text-sm text-muted-foreground">{feature.description}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default Identity;